#!/usr/bin/env bash

usage() {
    local name=${0##*/}
    echo Usage: $name ENVNAME BRANCH [CUSTOMERS-BRANCH]
    exit 1
}

[ $# -lt 2 ] && usage
BASEDIRECTORY=$HOME/coog_dev
NAME=$1
BRANCH=$2
[ $# -eq 3 ] && CUSTOMERS_BRANCH=$3 || CUSTOMERS_BRANCH=master

target=$BASEDIRECTORY/workspace_coog_$NAME
mkdir -p $target

PYVERSION=3.10.0

echo "Moving to directory $target..."
cd $target
echo "Inside $(pwd)"

echo "Setting up virtualenv coog_$NAME in $(pwd)"
eval "$(pyenv init -)"
eval "$(pyenv init --path)"
eval "$(pyenv virtualenv-init -)"
count_envs=$(pyenv virtualenvs | awk '{ print $1 }' | awk "/^coog_$NAME$/" | wc -l)
if [[ $count_envs -le 0 ]]
then
    echo "Creating virtualenv coog_$NAME"
    pyenv virtualenv $PYVERSION coog_$NAME
    echo "Done"
fi
pyenv local coog_$NAME
pyenv activate coog_$NAME
echo "Installing development tools"
pip install pyright
pip install rpdb
pip install flake8
echo "Done"

for repo in coog trytond trytond-modules tryton sao proteus
do
    echo "Setting up repo $repo..."
    git clone git@github.com:coopengo/$repo
    git -C $repo checkout $BRANCH
    echo "Setup for $repo done"
done

git clone git@github.com:coopengo/customers
git -C customers checkout $CUSTOMERS_BRANCH

echo "Activating and updating submodules..."
cd trytond-modules && git submodule init && git submodule update && cd -
cd coog && git submodule init && git submodule update && cd -
echo "Submodules up to date"

mkdir -p conf
./coog/bin/coog init bin
coog init conf
coog dep
coog repo link
